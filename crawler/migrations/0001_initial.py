# Generated by Django 2.1.5 on 2019-06-28 14:57

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=4096)),
                ('pdf_link', models.CharField(max_length=4096)),
                ('abstract', models.CharField(blank=True, max_length=20000, null=True)),
                ('words', models.TextField(default='')),
                ('notes', tinymce.models.HTMLField(default='')),
                ('preprocessed', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)', max_length=255)),
                ('shortname', models.CharField(default='CVPR', max_length=50)),
                ('url', models.CharField(max_length=255)),
                ('time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('shortname',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.Document')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.Tag')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('text',)},
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['name', 'shortname'], name='eventname'),
        ),
        migrations.AddField(
            model_name='document',
            name='authors',
            field=models.ManyToManyField(to='crawler.Author'),
        ),
        migrations.AddField(
            model_name='document',
            name='event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crawler.Event'),
        ),
        migrations.AddField(
            model_name='comment',
            name='doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.Document'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['name'], name='name'),
        ),
        migrations.AlterUniqueTogether(
            name='author',
            unique_together={('name',)},
        ),
        migrations.AlterUniqueTogether(
            name='tagassignment',
            unique_together={('doc', 'tag')},
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['title'], name='title'),
        ),
        migrations.AlterUniqueTogether(
            name='document',
            unique_together={('title',)},
        ),
    ]
